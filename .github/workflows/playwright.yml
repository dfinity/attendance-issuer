name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Install dependencies
      working-directory: frontend
      run: npm ci
    - name: Install ic-wasm
      run: cargo install ic-wasm --version 0.3.5
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Install dfx
      uses: dfinity/setup-dfx@main
    - name: Start local replica
      run: dfx start --background
    - name: Create canistres
      # We create the canisters first to have the ids when we build the frontend env vars
      run: |
        dfx canister create internet_identity
        dfx canister create early_adopter
    - name: Create config
      working-directory: frontend
      run: DFX_NETWORK=local ./scripts/create-env-vars.sh
    - name: Deploy canisters
      run: dfx deploy --no-wallet --network local
    - name: Create Event
      run: dfx canister call early_adopter register_event '(record { event_name = "TEST"; registration_code = opt "testcode" })'
    - name: Run Playwright tests
      working-directory: frontend
      run: PLAYWRIGHT_BASE_URL=http:/$(dfx canister id early_adopter).localhost:$(dfx info webserver-port) npm run test:e2e
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 3
    - name: Stop local replica
      run: dfx stop
